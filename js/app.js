var documents = []; function showImages() { var e = document.querySelector(".doc-imgs"), t = JSON.parse(window.localStorage.getItem("docs")); for (let n = 0; n < t.length; n++) { var a = t[n]; document.createElement("img").src = a, e.innerHTML += `<img src="${a}">` } } window.addEventListener("load", () => { JSON.parse(window.localStorage.getItem("docs")) ? ($(".add-container").hide(), $(".display-container").show(), showImages()) : ($(".display-container").hide(), $(".add-container").show()) }), $("#add-more").click(() => { $(".display-container").hide(), $(".add-container").show() }), $(document).ready(async function () { let e, t, a, n = "./model/"; var o, i = document.querySelector("#details-pop"), d = document.querySelector(".cross"), c = document.querySelector(".result-text"), s = document.querySelector(".result-loader"), r = document.querySelector("select"); function l(e, n) { if (e) return console.error(e); !function (e) { t = e[0].label, a = 100 * e[0].confidence, r.value != t ? (c.innerText = "!", s.classList.add("We fear it is not the correct document an hence cannot be saved. Refresh!")) : (documents.push(o), window.localStorage.setItem("docs", JSON.stringify(documents)), c.innerText = `${t}: ${a.toFixed(2)}%. Your image has been uploaded!`, s.classList.add("hide-me")) }(n) } d.addEventListener("click", () => { i.classList.add("hide-me") }), $(".image-section").hide(), $("#result").hide(), $("#imageUpload").change(function () { $(".image-section").show(), $("#btn-predict").show(), function (e) { if (e.files && e.files[0]) { var t = new FileReader; t.onload = (e => { $("#imagePreview").attr("src", e.target.result).hide().fadeIn(500) }), t.readAsDataURL(e.files[0]) } }(this) }), $("#btn-predict").click(async function () { $(this).hide(), i.style.display = "flex"; const t = document.getElementById("imagePreview"); t.load = function () { var e = document.createElement("canvas"); document.body.appendChild(e); var t = e.getContext("2d"); t.drawImage(img, 0, 0), o = t.getImageData(x, y, img.width, img.height).data }, async function (t) { await e.classify(t, l) }(t) }), e = ml5.imageClassifier(n + "model.json") });